package wasm_test

import (
	"os"
	"testing"

	"github.com/go-interpreter/wagon/exec"
	"github.com/phoreproject/synapse/wasm"
	"github.com/sirupsen/logrus"
)

func TestMain(m *testing.M) {
	logrus.SetLevel(logrus.DebugLevel)
	retCode := m.Run()
	os.Exit(retCode)
}

func TestEngine(t *testing.T) {
	engine := wasm.NewEngine()
	engine.RegisterFunction("env", wasm.FuncRegister{
		Name: "getTestNumber",
		F: func(process *exec.Process, n int32) int32 {
			return 3 + n
		},
	})

	/*
	compiled by https://mbebenita.github.io/WasmExplorer/

	extern "C" {
		int getTestNumber(int);
		int Entry(int n) {
			return n + getTestNumber(10);
		}
	}
	*/
	code := []byte{
		0x00, 0x61, 0x73, 0x6D, 0x01, 0x00, 0x00, 0x00, 0x01, 0x86, 0x80, 0x80, 0x80, 0x00, 0x01, 0x60,
		0x01, 0x7F, 0x01, 0x7F, 0x02, 0x95, 0x80, 0x80, 0x80, 0x00, 0x01, 0x03, 0x65, 0x6E, 0x76, 0x0D,
		0x67, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x4E, 0x75, 0x6D, 0x62, 0x65, 0x72, 0x00, 0x00, 0x03,
		0x82, 0x80, 0x80, 0x80, 0x00, 0x01, 0x00, 0x04, 0x84, 0x80, 0x80, 0x80, 0x00, 0x01, 0x70, 0x00,
		0x00, 0x05, 0x83, 0x80, 0x80, 0x80, 0x00, 0x01, 0x00, 0x01, 0x06, 0x81, 0x80, 0x80, 0x80, 0x00,
		0x00, 0x07, 0x92, 0x80, 0x80, 0x80, 0x00, 0x02, 0x06, 0x6D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x02,
		0x00, 0x05, 0x45, 0x6E, 0x74, 0x72, 0x79, 0x00, 0x01, 0x0A, 0x8F, 0x80, 0x80, 0x80, 0x00, 0x01,
		0x89, 0x80, 0x80, 0x80, 0x00, 0x00, 0x41, 0x0A, 0x10, 0x00, 0x20, 0x00, 0x6A, 0x0B,
	}

	//script, err := engine.LoadFromFile("/test.wasm")
	script, err := engine.LoadFromBytes(code)
	if err != nil {
		t.Fatal(err)
	}
	script.Run(6)
}

